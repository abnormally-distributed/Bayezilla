model {

  omega ~ dgamma(.5, .5)

  # Priors
  Intercept[1] <- 0
  for ( j in 1:P ) { beta[1,j] <- 0 }
  for ( r in 2:Nout ) { # notice starts at 2
    Intercept[r] ~ ddexp(0, 1)
    for ( j in 1:P ) {
      beta[r,j] ~ ddexp(0, omega)
    }
  }
  
  # Likelihood Function
  for ( i in 1:N ) {
    y[i] ~ dcat(explambda[1:Nout,i]) # dcat normalizes its argument vector
    ySim[i] ~ dcat(explambda[1:Nout,i])
    log_lik[i] <- logdensity.cat(y[i], explambda[1:Nout,i])
    for ( r in 1:Nout ) {
      explambda[r,i] <- exp(Intercept[r] + sum( beta[r,1:P] * X[i,1:P])) 
    }
  }
  
  deviance <- -2 * sum(log_lik[1:N])
}

