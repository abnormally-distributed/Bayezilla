% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesLme.R
\name{bayesLme}
\alias{bayesLme}
\title{Bayesian Linear Mixed Effects Models}
\usage{
bayesLme(formula, data, scale = FALSE, family = "gaussian",
  file = "Bayezilla_model.txt", intercept.prior = "dnorm(0, 1)",
  tau.prior = "dgamma(.001, .001)",
  ranef.prior = "dscaled.gamma(1, 8)", nu.prior = "dgamma(2, 0.01)",
  kappa.prior = "dmouch(1)", coef.prior = "dt(0, 1, 1)",
  write.data = TRUE, write.inits = TRUE, tau.inits = c(0.5, 1),
  coef.inits = c(runif(10, -1, 1)), inits = NULL, autorun = TRUE,
  iter = 15000, warmup = 5000, adapt = 10000, chains = 4,
  thin = 10, method = "rjparallel", cl = makeCluster(2))
}
\arguments{
\item{formula}{a formula representation of the desired model, using lme4 style syntax.  Two-way interactions for all variables are permitted, as are random intercepts but NOT random slopes.}

\item{data}{a data frame containing the variables specified in formula.  This must be specified.}

\item{scale}{should the data be scaled for you? Defaults to FALSE.}

\item{family}{the response family - one of "gaussian", "student_t", "laplace", "binomial", "poisson", "negative binomial", "ZIB", "ZIP", "ZINB" (the latter denote zero-inflated distributions).}

\item{file}{the filename of the model to output. Defaults to "Bayezilla_model.txt". This will be over-written if it already exists.}

\item{intercept.prior}{the prior on the model intercept. Defaults to "dnorm(0,1)".}

\item{tau.prior}{the prior distribution to be used for precision parameters. Defaults to "dgamma(.001, .001)".}

\item{ranef.prior}{the prior distribution on random effects variance components. Defaults to "dscaled.gamma(1, 1)".}

\item{nu.prior}{the prior distribution on the normality parameter for the student_t family. Defaults to "dgamma(2, 0.01)".}

\item{kappa.prior}{the prior for the negative binomial dispersion parameter. Defaults to "dmouch(1)"}

\item{coef.prior}{the prior distribution to be used for linear and fixed effect terms, as well as interactions. Defaults to "dt(0, 1, 1)".}

\item{write.data}{option to write the data to file with the model.  If the data is very large it may be better not to write this to file, but the same data frame must be given to the subsequent run.jags call that runs the model.}

\item{write.inits}{option to write the initial values to file with the model.}

\item{tau.inits}{a numeric vector of initial values from which the precision parameters in the model will be randomly chosen.  It is recommended to make these over-dispersed, but if the values are too extreme the model may not compile.}

\item{coef.inits}{a numeric vector of initial values from which the effect parameters in the model will be randomly chosen.  It is recommended to make these over-dispersed, but if the values are too extreme the model may not compile.}

\item{inits}{an optional list of named lists to specify initial values for one or more parameters in each chain.  The number of named lists must match n.chains.}

\item{autorun}{should the model automatically execute (defaults to TRUE) or would you like to first save the model for custom modification (select FALSE for this)..}

\item{iter}{How many post-warmup samples? Defaults to 10000. (for autorun)}

\item{warmup}{How many warmup samples? Defaults to 1000. (for autorun)}

\item{adapt}{How many adaptation steps? Defaults to 2000. (for autorun)}

\item{chains}{How many chains? Defaults to 4. Max allowed is 4. (for autorun)}

\item{thin}{Thinning interval. Defaults to 3. (for autorun)}

\item{method}{Defaults to "parallel". For an alternative parallel option, choose "rjparallel". Otherwise, "rjags" (single core run). (for autorun)}

\item{cl}{Use parallel::makeCluster(# clusters) to specify clusters for the parallel methods. Defaults to two cores. (for autorun)}

\item{n.chains}{the number of chains to use.}
}
\value{
a runjags object
}
\description{
This is an extremely heavily modified variant of the template.jags function in the runjags package. I have added response families,
enabled greater control over the priors, and also set the default priors to more sensible options. I have also added the ability for the model
to execute automatically, much like what one would experience with the rstanarm package. I have also added automatic generation of the full
log-likelihood function for use with this package's IC() function (or the loo package from the stan team) as well as automatic generation of
the full posterior predictive distribution. Furthermore, the model deviance is automatically calculated without need for the dic module. This is 
a very useful addition because the dic module will not function when using parallel cores or clusters for sampling in JAGS 4.3.0.

PLEASE NOTE: This function only supports random intercept models. This does not support random slopes. To use a random slopes model
consider using rstanarm, brms, or the blme package. Alternatively, you can generate the random intercepts model and set autorun to FALSE,
which will save a text file with the model. You can customize the JAGS code in that file to include random slopes and then source 
the file using run.jags("yourRandomSlopesModel.txt")

While I have made a strong effort to choose sensible weakly informative default priors, do make sure that they are sensible for your data. 
These defaults generally work best if your numeric covariates are centered and scaled, which also generally improves MCMC sampling 
performance. This package includes a scale() function that is superior to the base R scale() function in that it allows factor 
columns or character columns to be in the data frame and simply does not try to scale non-numeric columns.
}
\examples{
(
bayesLme()
}
