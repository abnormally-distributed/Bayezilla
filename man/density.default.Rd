% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/density.R
\name{density.default}
\alias{density.default}
\title{Modified version of density() with laplacian and student-t kernels}
\usage{
\method{density}{default}(x, bw = "sj", adjust = 1, df = 1,
  kernel = c("student", "normal", "laplacian", "laplace", "huber",
  "epanechnikov", "rectangular", "triangular", "biweight", "cosine",
  "optcosine"), weights = NULL, window = kernel, width,
  give.Rkern = FALSE, n = 2048, from, to, cut = 3, na.rm = FALSE,
  ...)
}
\arguments{
\item{x}{the data from which the estimate is to be computed. For the default method 
a numeric vector: long vectors are not supported.}

\item{bw}{the smoothing bandwidth to be used. The kernels are scaled such that 
this is the standard deviation of the smoothing kernel. (Note this differs from 
the reference books cited below, and from S-PLUS.) \cr \cr
bw can also be a character string giving a rule to choose the bandwidth. 
See bw.nrd. \cr \cr "SJ" is the default. "nrd0" has remained the default in the unmodified version of this function
for historical reasons, rather than as a the best method, where "SJ" better fits. Hence this package takes the progressive path
and just uses the better option as the default.}

\item{adjust}{The specified (or computed) value of bw is multiplied by adjust.}

\item{df}{The degrees of freedom for the student t kernel. Defaults to 1 (making it a cauchy kernel).}

\item{kernel}{a character string giving the smoothing kernel to be used. 
This must partially match one of "normal", "laplacian", "student", "huber", "rectangular", "triangular", "epanechnikov", "biweight",
"cosine" or "optcosine", with default "laplacian", and may be abbreviated to a unique prefix (single letter). \cr \cr
"cosine" is smoother than "optcosine", which is the usual ‘cosine’ kernel in the literature and almost MSE-efficient.
However, "cosine" is the version used by S.}

\item{weights}{numeric vector of non-negative observation weights, hence of same length as x. 
The default NULL is equivalent to weights = rep(1/nx, nx) where nx is the length of (the finite entries of) x[].}

\item{window}{a character string giving the smoothing kernel to be used. 
This must partially match one of "normal", "laplacian", "student", "huber","rectangular", "triangular", "epanechnikov", "biweight",
"cosine" or "optcosine", with default "laplacian", and may be abbreviated to a unique prefix (single letter). \cr \cr
"cosine" is smoother than "optcosine", which is the usual ‘cosine’ kernel in the literature and almost MSE-efficient.
However, "cosine" is the version used by S.}

\item{width}{this exists for compatibility with S; if given, and bw is not, will set bw to width if this is a character string, or to a kernel-dependent multiple of width if this is numeric.}

\item{give.Rkern}{logical; if true, no density is estimated, and the ‘canonical bandwidth’ of the chosen kernel is returned instead.}

\item{n}{the number of equally spaced points at which the density is to be estimated. When n > 512, it is rounded up to a power of 2 during the calculations (as fft is used) and the final result is interpolated by approx. So it almost always makes sense to specify n as a power of two.}

\item{from}{the left and right-most points of the grid at which the density is to be estimated; the defaults are cut * bw outside of range(x).}

\item{to}{the left and right-most points of the grid at which the density is to be estimated; the defaults are cut * bw outside of range(x).}

\item{cut}{by default, the values of from and to are cut bandwidths beyond the extremes of the data. This allows the estimated density to drop to approximately zero at the extremes.}

\item{na.rm}{logical; if TRUE, missing values are removed from x. If FALSE any missing values cause an error.}

\item{...}{further arguments for (non-default) methods.}
}
\value{
If give.Rkern is true, the number R(K), otherwise an object with class "density" whose underlying structure is a list containing the following components.
}
\description{
This modifies the base R density() function to add three new kernels - the Laplace
, Student-T, and Huber (with fixed k = 1.58) densities. The default number of points in the estimated density curve have
also been changed from the paltry 512 to 2048 in order to give better density plots.
}
\examples{
require(graphics)
plot(density(c(-20, rep(0,98), 20)), xlim = c(-4, 4))  # IQR = 0 
# The Old Faithful geyser data 
d <- density(faithful$eruptions, bw = "sj")
d
plot(d)
plot(d, type = "n")
polygon(d, col = "wheat")


}
